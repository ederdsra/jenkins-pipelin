try {

   // Input Step
   timeout(time: 5, unit: "DAYS") {
      input message: "Do you want to create the tag: ${NEW_TAG} and deploy it to Staging?", ok: "Yes", submitter: "ariel,roberto,eder"
   }

   // New Tag
   def NEW_TAG = "${TAG}"
   NEW_TAG = NEW_TAG.substring(0, NEW_TAG.indexOf('-'))

   // RC Branch
   def RC_BRANCH = "rc/" + NEW_TAG

   stage('Merge & Tag') {
      
      node('master') {
         checkout scm
         // Fetch all
         sh "git fetch --all --prune"

         // Merge to dev
         sh "git checkout dev"
         sh "git merge origin/${RC_BRANCH}"
         sh "git push origin dev"

         // Merge to master and Tag
         sh "git checkout master"
         sh "git merge origin/${RC_BRANCH}"
         sh "git push origin master"
         sh "git tag ${NEW_TAG}"
         sh "git push --tags"
      }
   }

} catch(e) {
   // mark build as failed
   currentBuild.result = "FAILURE";

   // send slack notification
   //slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

   // throw the error
   throw e;
}